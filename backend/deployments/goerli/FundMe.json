{
  "address": "0x262d7033057692Ab5bf8677059578E3204B9e514",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughFundsToWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__OnlyOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__TransactionFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDonators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAmountDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalValueDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc808a598a3496966e543da7e8d0353898d7e4287e3d6e20869389a843794b0ff",
  "receipt": {
    "to": null,
    "from": "0x9f2A2AD7fC44B595378433298e2e00DE7551FB6c",
    "contractAddress": "0x262d7033057692Ab5bf8677059578E3204B9e514",
    "transactionIndex": 18,
    "gasUsed": "478453",
    "logsBloom": "0x
    "blockHash": "0xe85f07bcd52c184389be611f6c91da55837a547b2099aa4063198624f839280a",
    "transactionHash": "0xc808a598a3496966e543da7e8d0353898d7e4287e3d6e20869389a843794b0ff",
    "logs": [],
    "blockNumber": 8293483,
    "cumulativeGasUsed": "4125041",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5152f041533a8a23bb6054503417855f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughFundsToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__TransactionFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDonators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAmountDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValueDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAmountDonated(address)\":{\"params\":{\"_address\":\"Address to check the amount of funds donated by.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"A function to fund the contract.\"},\"getAllDonators()\":{\"notice\":\"A function to get all the donators to a contract.\"},\"getAmountDonated(address)\":{\"notice\":\"A function to get the amount of funds donated by an address. \"},\"getContractOwner()\":{\"notice\":\"A function to get the contract owner.\"},\"getTotalValueDonated()\":{\"notice\":\"A function which returns the total value donated to a contract.\"},\"withdraw()\":{\"notice\":\"This is a function to withdraw all the funds from a contract,         can be called only by the contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\n\\n\\nerror FundMe__OnlyOwner();\\nerror FundMe__NotEnoughFundsToWithdraw();\\nerror FundMe__TransactionFailed();\\n\\n\\ncontract FundMe {\\n\\n    address private immutable i_owner;\\n\\n    // The amount of funds donated by an address\\n\\n    mapping(address => uint256) private donations;\\n    address[] private donators;\\n\\n    constructor() {\\n\\n        i_owner = msg.sender;\\n\\n    } // end constructor\\n\\n\\n    receive() external payable {\\n\\n        fund();\\n\\n    } // end receive()\\n\\n\\n    fallback() external payable {\\n\\n\\n    } // end fallback()\\n\\n\\n    /**\\n     * @notice A function to fund the contract.\\n     */\\n    function fund() public payable {\\n\\n        uint256 amountDonated = donations[msg.sender];\\n\\n        if (amountDonated == 0) {\\n\\n            donators.push(msg.sender);\\n\\n        } // end if\\n\\n        amountDonated += msg.value;\\n\\n        // Update the information in storage\\n\\n        donations[msg.sender] = amountDonated;\\n\\n    } // end fund()\\n\\n\\n    /**\\n     * @notice This is a function to withdraw all the funds from a contract,\\n     *         can be called only by the contract owner.\\n     */\\n    function withdraw() public onlyOwner {\\n\\n        // Check if there are funds to withdraw\\n\\n        if (address(this).balance == 0) {\\n\\n            // Revert the transaction\\n\\n            revert FundMe__NotEnoughFundsToWithdraw();\\n\\n        } // end if\\n\\n        // Remove all the contributors\\n\\n        delete donators;\\n\\n        // Send all the funds\\n\\n        (bool success,) = payable(msg.sender).call{ value: address(this).balance }(\\\"\\\");\\n\\n        // Check if the funds were not sent successfully, then revert the transaction\\n\\n        if (success == false) {\\n\\n            // Revert the transaction\\n\\n            revert FundMe__TransactionFailed();\\n\\n        } // end if\\n\\n    } // end withdraw()\\n\\n\\n    // Getter functions\\n\\n    /**\\n     * @notice A function to get the contract owner.\\n     */\\n    function getContractOwner() public view returns(address) {\\n\\n        return i_owner;\\n\\n    } // end getContractOwner()\\n\\n\\n    /**\\n     * @notice A function to get all the donators to a contract.\\n     */\\n    function getAllDonators() public view returns(address[] memory) {\\n\\n        return donators;\\n\\n    } // end getAllDonators()\\n\\n\\n    /**\\n     * @notice A function to get the amount of funds donated by an address.\\n     * \\n     * @param _address Address to check the amount of funds donated by.\\n     */\\n    function getAmountDonated(address _address) public view returns(uint256) {\\n\\n        return donations[_address];\\n\\n    } // end getAmountDonated()\\n\\n\\n    /**\\n     * @notice A function which returns the total value donated to a contract.\\n     */\\n    function getTotalValueDonated() public view returns(uint256) {\\n\\n        return address(this).balance;\\n\\n    } // end getTotalValueDonated()\\n\\n\\n    // Modifiers\\n\\n\\n    /**\\n     * @notice A modifier to check if a function is called by the contract owner.\\n     */\\n    modifier onlyOwner() {\\n\\n        // Check if it the owner of a contract\\n        \\n        if (msg.sender != i_owner) {\\n\\n            // Revert the transaction\\n            \\n            revert FundMe__OnlyOwner();\\n\\n        } // end if\\n\\n        _;\\n\\n    } // end onlyOwner()\\n\\n} // end FundMe\",\"keccak256\":\"0xe5a95047625cd2d440a7539e3f85c171f2365999b47f9858c53dac40f1b44e60\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516107b76100676000396000818161024e01526103ca01526107b76000f3fe6080604052600436106100595760003560e01c80633ccfd60b1461006a578063442890d51461008157806385aae382146100ac578063999bc524146100d7578063b60d428814610114578063e13dfd761461011e57610068565b3661006857610066610149565b005b005b34801561007657600080fd5b5061007f61024c565b005b34801561008d57600080fd5b506100966103c6565b6040516100a3919061054b565b60405180910390f35b3480156100b857600080fd5b506100c16103ee565b6040516100ce9190610624565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610677565b61047c565b60405161010b91906106bd565b60405180910390f35b61011c610149565b005b34801561012a57600080fd5b506101336104c4565b60405161014091906106bd565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036101f8576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34816102049190610707565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f0bced8bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000470361030b576040517f8f4bf21800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600061031991906104cc565b60003373ffffffffffffffffffffffffffffffffffffffff164760405161033f9061076c565b60006040518083038185875af1925050503d806000811461037c576040519150601f19603f3d011682016040523d82523d6000602084013e610381565b606091505b5050905060001515811515036103c3576040517ffa6a911f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060600180548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610428575b5050505050905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600047905090565b50805460008255906000526020600020908101906104ea91906104ed565b50565b5b808211156105065760008160009055506001016104ee565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105358261050a565b9050919050565b6105458161052a565b82525050565b6000602082019050610560600083018461053c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61059b8161052a565b82525050565b60006105ad8383610592565b60208301905092915050565b6000602082019050919050565b60006105d182610566565b6105db8185610571565b93506105e683610582565b8060005b838110156106175781516105fe88826105a1565b9750610609836105b9565b9250506001810190506105ea565b5085935050505092915050565b6000602082019050818103600083015261063e81846105c6565b905092915050565b600080fd5b6106548161052a565b811461065f57600080fd5b50565b6000813590506106718161064b565b92915050565b60006020828403121561068d5761068c610646565b5b600061069b84828501610662565b91505092915050565b6000819050919050565b6106b7816106a4565b82525050565b60006020820190506106d260008301846106ae565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610712826106a4565b915061071d836106a4565b9250828201905080821115610735576107346106d8565b5b92915050565b600081905092915050565b50565b600061075660008361073b565b915061076182610746565b600082019050919050565b600061077782610749565b915081905091905056fea2646970667358221220ee4beb631acc7900f66f65f8ef0a8a2a4daea286af141192a72d88637f6b879764736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633ccfd60b1461006a578063442890d51461008157806385aae382146100ac578063999bc524146100d7578063b60d428814610114578063e13dfd761461011e57610068565b3661006857610066610149565b005b005b34801561007657600080fd5b5061007f61024c565b005b34801561008d57600080fd5b506100966103c6565b6040516100a3919061054b565b60405180910390f35b3480156100b857600080fd5b506100c16103ee565b6040516100ce9190610624565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610677565b61047c565b60405161010b91906106bd565b60405180910390f35b61011c610149565b005b34801561012a57600080fd5b506101336104c4565b60405161014091906106bd565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036101f8576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34816102049190610707565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f0bced8bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000470361030b576040517f8f4bf21800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600061031991906104cc565b60003373ffffffffffffffffffffffffffffffffffffffff164760405161033f9061076c565b60006040518083038185875af1925050503d806000811461037c576040519150601f19603f3d011682016040523d82523d6000602084013e610381565b606091505b5050905060001515811515036103c3576040517ffa6a911f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060600180548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610428575b5050505050905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600047905090565b50805460008255906000526020600020908101906104ea91906104ed565b50565b5b808211156105065760008160009055506001016104ee565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105358261050a565b9050919050565b6105458161052a565b82525050565b6000602082019050610560600083018461053c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61059b8161052a565b82525050565b60006105ad8383610592565b60208301905092915050565b6000602082019050919050565b60006105d182610566565b6105db8185610571565b93506105e683610582565b8060005b838110156106175781516105fe88826105a1565b9750610609836105b9565b9250506001810190506105ea565b5085935050505092915050565b6000602082019050818103600083015261063e81846105c6565b905092915050565b600080fd5b6106548161052a565b811461065f57600080fd5b50565b6000813590506106718161064b565b92915050565b60006020828403121561068d5761068c610646565b5b600061069b84828501610662565b91505092915050565b6000819050919050565b6106b7816106a4565b82525050565b60006020820190506106d260008301846106ae565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610712826106a4565b915061071d836106a4565b9250828201905080821115610735576107346106d8565b5b92915050565b600081905092915050565b50565b600061075660008361073b565b915061076182610746565b600082019050919050565b600061077782610749565b915081905091905056fea2646970667358221220ee4beb631acc7900f66f65f8ef0a8a2a4daea286af141192a72d88637f6b879764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAmountDonated(address)": {
        "params": {
          "_address": "Address to check the amount of funds donated by."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "A function to fund the contract."
      },
      "getAllDonators()": {
        "notice": "A function to get all the donators to a contract."
      },
      "getAmountDonated(address)": {
        "notice": "A function to get the amount of funds donated by an address. "
      },
      "getContractOwner()": {
        "notice": "A function to get the contract owner."
      },
      "getTotalValueDonated()": {
        "notice": "A function which returns the total value donated to a contract."
      },
      "withdraw()": {
        "notice": "This is a function to withdraw all the funds from a contract,         can be called only by the contract owner."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "donations",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "donators",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}